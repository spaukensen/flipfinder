{
  "name": "Estimation LeBonCoin - Valeur Marché",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "schedule-trigger-estimation",
      "name": "Toutes les 2h",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "={{ $env.GOOGLE_SHEET_ID }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Scanner Interencheres",
          "mode": "name"
        },
        "options": {
          "rangeDefinition": "specifyRange",
          "range": "A:N"
        }
      },
      "id": "google-sheets-read",
      "name": "Lire Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [460, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-credentials",
          "name": "Google Sheets FlipFinder"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Filtrer uniquement les produits sans estimation LeBonCoin\nconst items = $input.all();\nconst toEstimate = [];\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // Ne traiter que les lots avec marque détectée et sans estimation existante\n  if (data.marque_detectee && \n      data.marque_detectee !== '' && \n      (!data.prix_lbc_min || data.prix_lbc_min === '')) {\n    toEstimate.push({\n      json: {\n        lot_id: data.lot_id,\n        titre: data.titre,\n        marque_detectee: data.marque_detectee,\n        prix_interencheres: data.prix,\n        url_interencheres: data.url\n      }\n    });\n  }\n}\n\nreturn toEstimate.length > 0 ? toEstimate : [];"
      },
      "id": "code-filter-to-estimate",
      "name": "Filtrer produits à estimer",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [670, 300]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {
          "reset": false
        }
      },
      "id": "split-in-batches",
      "name": "Traiter un par un",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [880, 300]
    },
    {
      "parameters": {
        "jsCode": "// Construire URL de recherche LeBonCoin\nconst data = $input.first().json;\nconst searchQuery = encodeURIComponent(data.titre);\n\n// URL LeBonCoin avec paramètres de recherche\nconst lbcUrl = `https://www.leboncoin.fr/recherche?text=${searchQuery}&category=15&owner_type=all&sort=time&order=desc`;\n\nreturn {\n  json: {\n    ...data,\n    lbc_search_url: lbcUrl\n  }\n};"
      },
      "id": "code-build-lbc-url",
      "name": "Construire URL LeBonCoin",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1090, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://playwright-stealth:3001/scrape",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"url\": $json.lbc_search_url,\n  \"waitFor\": 5000\n} }}",
        "options": {
          "timeout": 90000
        }
      },
      "id": "http-request-leboncoin",
      "name": "Scraper LeBonCoin",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1300, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extraire les prix des annonces LeBonCoin\nconst currentItem = $input.first().json;\nconst html = currentItem.html || '';\n\n// Pattern pour extraire les prix LeBonCoin\n// Structure: <span data-qa-id=\"aditem_price\">150&nbsp;€</span>\nconst pricePattern = /<span[^>]*data-qa-id=\"aditem_price\"[^>]*>([\\d\\s]+)(?:&nbsp;)?€<\\/span>/gi;\n\nconst prices = [];\nlet match;\n\nwhile ((match = pricePattern.exec(html)) !== null) {\n  const priceStr = match[1].replace(/[\\s&nbsp;]/g, '');\n  const price = parseInt(priceStr);\n  if (price > 0 && price < 10000) {  // Filtrer les prix aberrants\n    prices.push(price);\n  }\n}\n\n// Calculer statistiques si on a trouvé des prix\nlet prix_lbc_min = null;\nlet prix_lbc_max = null;\nlet prix_lbc_moyen = null;\nlet nb_annonces_lbc = 0;\n\nif (prices.length > 0) {\n  prices.sort((a, b) => a - b);\n  prix_lbc_min = prices[0];\n  prix_lbc_max = prices[prices.length - 1];\n  prix_lbc_moyen = Math.round(prices.reduce((sum, p) => sum + p, 0) / prices.length);\n  nb_annonces_lbc = prices.length;\n}\n\n// Calculer l'opportunité\nlet opportunite_estimee = null;\nif (prix_lbc_moyen && currentItem.prix_interencheres) {\n  opportunite_estimee = prix_lbc_moyen - currentItem.prix_interencheres;\n}\n\nreturn {\n  json: {\n    lot_id: currentItem.lot_id,\n    prix_lbc_min,\n    prix_lbc_max,\n    prix_lbc_moyen,\n    nb_annonces_lbc,\n    opportunite_estimee,\n    date_estimation: new Date().toISOString()\n  }\n};"
      },
      "id": "code-extract-lbc-prices",
      "name": "Extraire prix LeBonCoin",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1510, 300]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "={{ $env.GOOGLE_SHEET_ID }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Scanner Interencheres",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "matchingColumns": ["lot_id"],
          "schema": [
            { "id": "lot_id", "displayName": "Lot ID", "required": false, "defaultMatch": true, "canBeUsedToMatch": true, "type": "string" },
            { "id": "prix_lbc_min", "displayName": "Prix LBC Min", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "number" },
            { "id": "prix_lbc_max", "displayName": "Prix LBC Max", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "number" },
            { "id": "prix_lbc_moyen", "displayName": "Prix LBC Moyen", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "number" },
            { "id": "nb_annonces_lbc", "displayName": "Nb Annonces LBC", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "number" },
            { "id": "opportunite_estimee", "displayName": "Opportunité €", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "number" },
            { "id": "date_estimation", "displayName": "Date Estimation", "required": false, "defaultMatch": false, "canBeUsedToMatch": false, "type": "string" }
          ]
        },
        "options": {}
      },
      "id": "google-sheets-update",
      "name": "Mettre à jour Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [1720, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-credentials",
          "name": "Google Sheets FlipFinder"
        }
      }
    },
    {
      "parameters": {},
      "id": "loop-back",
      "name": "Retour au split",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [1720, 480]
    }
  ],
  "connections": {
    "Toutes les 2h": {
      "main": [
        [
          {
            "node": "Lire Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lire Google Sheets": {
      "main": [
        [
          {
            "node": "Filtrer produits à estimer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrer produits à estimer": {
      "main": [
        [
          {
            "node": "Traiter un par un",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Traiter un par un": {
      "main": [
        [
          {
            "node": "Construire URL LeBonCoin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Construire URL LeBonCoin": {
      "main": [
        [
          {
            "node": "Scraper LeBonCoin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraper LeBonCoin": {
      "main": [
        [
          {
            "node": "Extraire prix LeBonCoin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraire prix LeBonCoin": {
      "main": [
        [
          {
            "node": "Mettre à jour Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mettre à jour Google Sheets": {
      "main": [
        [
          {
            "node": "Retour au split",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retour au split": {
      "main": [
        [
          {
            "node": "Traiter un par un",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-11-01T00:00:00.000Z",
  "versionId": "1"
}
