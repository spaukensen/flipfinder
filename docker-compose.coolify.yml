version: '3.8'

networks:
  outillage-net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
  ollama_data:
    driver: local
  meilisearch_data:
    driver: local

services:
  postgres:
    image: 'postgres:15-alpine'
    container_name: outillage_postgres
    restart: unless-stopped
    networks:
      - outillage-net
    environment:
      - 'POSTGRES_USER=${POSTGRES_USER:-outillage_user}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SecurePass2024!}'
      - 'POSTGRES_DB=${POSTGRES_DB:-outillage}'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${POSTGRES_USER:-outillage_user} -d ${POSTGRES_DB:-outillage}'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  n8n:
    image: 'n8nio/n8n:latest'
    container_name: outillage_n8n
    restart: unless-stopped
    networks:
      - outillage-net
    environment:
      - 'N8N_HOST=${SERVICE_FQDN_N8N:-localhost}'
      - 'N8N_PORT=5678'
      - 'N8N_PROTOCOL=https'
      - 'WEBHOOK_URL=https://${SERVICE_FQDN_N8N:-localhost}/'
      - 'N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}'
      - 'DB_TYPE=postgresdb'
      - 'DB_POSTGRESDB_HOST=postgres'
      - 'DB_POSTGRESDB_PORT=5432'
      - 'DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-outillage}'
      - 'DB_POSTGRESDB_USER=${POSTGRES_USER:-outillage_user}'
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-SecurePass2024!}'
      - 'N8N_SECURE_COOKIE=true'
      - 'N8N_PROXY_HOPS=1'
      - 'BROWSERLESS_TOKEN=${BROWSERLESS_TOKEN:-token123}'
      - 'DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}'
      - 'N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true'
    volumes:
      - 'n8n_data:/home/node/.n8n'
    ports:
      - '5678:5678'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - 'wget --spider -q http://localhost:5678/healthz || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  ollama:
    image: 'ollama/ollama:latest'
    container_name: outillage_ollama
    restart: unless-stopped
    networks:
      - outillage-net
    volumes:
      - 'ollama_data:/root/.ollama'
    ports:
      - '11434:11434'
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://localhost:11434/api/tags || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  meilisearch:
    image: 'getmeili/meilisearch:latest'
    container_name: outillage_meilisearch
    restart: unless-stopped
    networks:
      - outillage-net
    environment:
      - 'MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey123}'
      - 'MEILI_ENV=production'
    volumes:
      - 'meilisearch_data:/meili_data'
    ports:
      - '7700:7700'
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://localhost:7700/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  browserless:
    image: 'browserless/chrome:latest'
    container_name: outillage_browser
    restart: unless-stopped
    networks:
      - outillage-net
    environment:
      - CONNECTION_TIMEOUT=120000
      - MAX_CONCURRENT_SESSIONS=2
      - MAX_QUEUE_LENGTH=10
      - ENABLE_CORS=true
      - 'TOKEN=${BROWSERLESS_TOKEN:-token123}'
    ports:
      - '3300:3000'
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://localhost:3000 || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  playwright-stealth:
    build:
      context: .
      dockerfile: Dockerfile.playwright-stealth
    container_name: outillage_playwright
    restart: unless-stopped
    networks:
      - outillage-net
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=production
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl -f http://localhost:3001/health || exit 1'
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
